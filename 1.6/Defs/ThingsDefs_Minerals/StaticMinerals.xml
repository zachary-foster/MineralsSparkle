<?xml version="1.0" encoding="UTF-8"?>
<Defs>
  
  
  <ThingDef ParentName="MF_StaticMineralBase" Class="MineralsFramework.ThingDef_StaticMineral">
    <defName>CalciteCrystal</defName>
    <label>Calcite Crystal</label>
    <description>Crystals of calcium carbonate. A common mineral found underground, particulary in limestone caves. Interesting, but only rarely yeilds gemstone quality specimens.</description>
    <graphicData>
      <texPath>Things/Mineral/CalciteCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <shaderType>CutoutComplex</shaderType>
      <damageData>
        <enabled>false</enabled>
      </damageData>
    </graphicData>
    <uiIconPath>Things/Mineral/CalciteCrystal/CalciteCrystalA</uiIconPath>
    <!-- If defined, randomly pick colors from this set -->
    <randomColorsOne>
      <li>(211,213,212)</li>
      <li>(216,216,216)</li>
      <li>(202,202,202)</li>
      <li>(206,206,206)</li>
    </randomColorsOne>
    <randomColorsTwo>
      <li>(211,213,212)</li>
      <li>(216,200,180)</li>
      <li>(218,203,190)</li>
      <li>(216,200,180)</li>
      <li>(202,200,190)</li>
      <li>(206,200,200)</li>
      <li>(205,175,150)</li>
      <li>(215,195,160)</li>
    </randomColorsTwo>
    <altitudeLayer>LowPlant</altitudeLayer>
    <castEdgeShadows>false</castEdgeShadows>
    <fillPercent>0.1</fillPercent>
    <coversFloor>false</coversFloor>
    <statBases>
      <MaxHitPoints>500</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>8</Beauty>
    </statBases>
    <selectable>true</selectable>
    <pathCost>40</pathCost>
    <filthLeaving>Filth_RubbleRock</filthLeaving>
    <mineable>true</mineable>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>2</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.5</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.001</minClusterProbability>
    <maxClusterProbability>0.006</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>40</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.3</initialSizeMin>
    <initialSizeMax>.95</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.3</initialSizeVariation>
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <allowedTerrains>
      <li>Limestone_Rough</li>
      <li>Marble_Rough</li>
      <li>Sandstone_Rough</li>
      <li>Slate_Rough</li>
      <li>ZF_ClaystoneBase_Rough</li>
      <li>ZF_MudstoneBase_Rough</li>
      <li>ZF_ChalkBase_Rough</li>
      <li>ZF_LigniteBase_Rough</li>
      <li>ZF_BlueMarbleBase_Rough</li>
      <li>ZF_PinkMarbleBase_Rough</li>
      <li>ZF_BrownMarbleBase_Rough</li>
    </allowedTerrains>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>Limestone</li>
      <li>Chalk</li>
    </associatedOres>
    <nearAssociatedOreBonus>5</nearAssociatedOreBonus>
    <!-- Roof requirements -->
    <mustBeUnderRoof>true</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>15</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.3</min>
      <max>0.6</max>
    </visualSizeRange>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualClustering>0.5</visualClustering>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSpread>2.0</visualSpread>
    <visualSizeVariation>0.2</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>0.5</DropProbability>
      </li>
    </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
    </tags>
    <!-- If graphic overlapping with nearby wall textures are rotated -->
    <growsUpWalls>true</growsUpWalls>
    <!-- Minimum distance from the nearest settlement the inital spawn needs to be in order to be spawned at the maximum probablity -->
    <otherSettlementMiningRadius>0</otherSettlementMiningRadius>
  </ThingDef>


  <ThingDef ParentName="QuartzBase" Class="MineralsFramework.ThingDef_StaticMineral">
    <defName>QuartzCrystal</defName>
    <label>Quartz Crystal</label>
    <description>Crystals of silicon dioxide, the same material glass is made of. A common mineral found underground. Yeilds glass batch when mined. Once in a while a gem-quality peice might be found.</description>
    <graphicData>
      <texPath>Things/Mineral/QuartzCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(230,230,230)</color>
      <shaderType>CutoutComplex</shaderType>
      <damageData>
        <enabled>false</enabled>
      </damageData>
    </graphicData>
    <randomColorsOne>
      <li>(230,230,230)</li>
      <li>(235,235,235)</li>
      <li>(240,240,240)</li>
      <li>(245,245,245)</li>
      <li>(250,250,250)</li>
    </randomColorsOne>
    <randomColorsTwo>
      <li>(230,230,230)</li>
      <li>(235,235,235)</li>
      <li>(240,240,240)</li>
      <li>(245,245,245)</li>
      <li>(250,250,250)</li>
    </randomColorsTwo>
    <statBases>
      <MaxHitPoints>500</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>12</Beauty>
    </statBases>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.5</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.003</minClusterProbability>
    <maxClusterProbability>0.008</maxClusterProbability>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>1</DropProbability>
      </li>
    </randomlyDropResources>
    <!-- Minimum distance from the nearest settlement the inital spawn needs to be in order to be spawned at the maximum probablity -->
    <otherSettlementMiningRadius>0</otherSettlementMiningRadius>
  </ThingDef>


  <ThingDef ParentName="QuartzBase" Class="MineralsFramework.ThingDef_StaticMineral">
    <defName>AmethystCrystal</defName>
    <label>Amethyst Crystal</label>
    <description>Crystals of silicon dioxide. Impurities of iron make these crystals a beautiful purple. A common mineral found underground. Yeilds glass batch when mined. Sometimes a gem-quality peice might be found.</description>
    <graphicData>
      <texPath>Things/Mineral/QuartzCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(230,230,230)</color>
      <shaderType>CutoutComplex</shaderType>
      <damageData>
        <enabled>false</enabled>
      </damageData>
    </graphicData>
    <randomColorsOne>
      <li>(230,230,230)</li>
      <li>(235,235,235)</li>
      <li>(240,240,240)</li>
      <li>(245,245,245)</li>
      <li>(250,250,250)</li>
    </randomColorsOne>
    <randomColorsTwo>
      <li>(110, 0, 255)</li>
      <li>(120, 0, 255)</li>
      <li>(130, 0, 255)</li>
      <li>(110, 30, 255)</li>
      <li>(120, 30, 255)</li>
      <li>(130, 30, 255)</li>
    </randomColorsTwo>
    <statBases>
      <MaxHitPoints>500</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>18</Beauty>
    </statBases>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.2</perMapProbability>
    <!-- For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.001</minClusterProbability>
    <maxClusterProbability>0.005</maxClusterProbability>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>3.0</DropProbability>
      </li>
    </randomlyDropResources>
    <!-- Minimum distance from the nearest settlement the inital spawn needs to be in order to be spawned at the maximum probablity -->
    <otherSettlementMiningRadius>8</otherSettlementMiningRadius>
  </ThingDef>


  <ThingDef ParentName="TourmalineBase" Class="MineralsFramework.ThingDef_StaticMineral">
    <defName>SchorlCrystal</defName>
    <label>Schorl Crystal</label>
    <description>The most common and least valuable form of tourmaline, a boron silicate mineral.</description>
    <graphicData>
      <texPath>Things/Mineral/TourmalineCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(100,100,100)</color>
      <colorTwo>(120,120,120)</colorTwo>
      <shaderType>CutoutComplex</shaderType>
      <damageData>
        <enabled>false</enabled>
      </damageData>
    </graphicData>
    <!-- If defined, randomly pick colors from this set -->
    <randomColorsOne>
      <li>(70,70,70)</li>
      <li>(75,75,75)</li>
      <li>(60,60,60)</li>
      <li>(55,55,55)</li>
      <li>(80,80,80)</li>
    </randomColorsOne>
    <randomColorsTwo>
      <li>(70,70,70)</li>
      <li>(75,75,75)</li>
      <li>(60,60,60)</li>
      <li>(55,55,55)</li>
      <li>(80,80,80)</li>
    </randomColorsTwo>
    <statBases>
      <MaxHitPoints>700</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>5</Beauty>
    </statBases>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.25</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.002</minClusterProbability>
    <maxClusterProbability>0.005</maxClusterProbability>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>3.0</DropProbability>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>5.0</DropProbability>
        <WasteProduct>true</WasteProduct>
      </li>
   </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
      <li>NoticeMineral_Event</li>
    </tags>
    <!-- Minimum distance from the nearest settlement the inital spawn needs to be in order to be spawned at the maximum probablity -->
    <otherSettlementMiningRadius>0</otherSettlementMiningRadius>
  </ThingDef>


  <ThingDef ParentName="TourmalineBase" Class="MineralsFramework.ThingDef_StaticMineral">
    <defName>RubelliteCrystal</defName>
    <label>Rubellite Crystal</label>
    <description>A type of tourmaline, a boron silicate mineral with many chemical variations. This red variety often yeilds high quality gemstones.</description>
    <graphicData>
      <texPath>Things/Mineral/TourmalineCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(228,156,160)</color>
      <colorTwo>(71,6,14)</colorTwo>
      <shaderType>CutoutComplex</shaderType>
      <damageData>
        <enabled>false</enabled>
      </damageData>
    </graphicData>
    <!-- If defined, randomly pick colors from this set -->
    <randomColorsOne>
      <li>(228,156,160)</li>
      <li>(132,29,48)</li>
      <li>(245,51,153)</li>
      <li>(255,153,204)</li>
      <li>(198,118,127)</li>
      <li>(195,103,114)</li>
      <li>(230,34,115)</li>
      <li>(212,141,145)</li>
      <li>(233,195,192)</li>
      <li>(212,172,172)</li>
      <li>(204,102,153)</li>
    </randomColorsOne>
    <statBases>
      <MaxHitPoints>500</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>20</Beauty>
    </statBases>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.1</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.001</minClusterProbability>
    <maxClusterProbability>0.004</maxClusterProbability>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>5.0</DropProbability>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>5.0</DropProbability>
        <WasteProduct>true</WasteProduct>
      </li>
    </randomlyDropResources>
    <!-- Minimum distance from the nearest settlement the inital spawn needs to be in order to be spawned at the maximum probablity -->
    <otherSettlementMiningRadius>13</otherSettlementMiningRadius>
  </ThingDef>


  <ThingDef ParentName="TourmalineBase" Class="MineralsFramework.ThingDef_StaticMineral">
    <defName>IndicoliteCrystal</defName>
    <label>Indicolite Crystal</label>
    <description>A type of tourmaline, a boron silicate mineral with many chemical variations. This blue-green variety often yeilds high quality gemstones.</description>
    <graphicData>
      <texPath>Things/Mineral/TourmalineCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(45,102,113)</color>
      <colorTwo>(7,95,231)</colorTwo>
      <shaderType>CutoutComplex</shaderType>
      <damageData>
        <enabled>false</enabled>
      </damageData>
    </graphicData>
    <!-- If defined, randomly pick colors from this set -->
    <randomColorsOne>
      <li>(45,102,113)</li>
      <li>(20,147,167)</li>
      <li>(37,156,203)</li>
      <li>(28,142,135)</li>
      <li>(0,50,43)</li>
      <li>(0,32,59)</li>
      <li>(47,145,158)</li>
      <li>(16,93,104)</li>
      <li>(37,169,119)</li>
      <li>(51, 204, 204)</li>
      <li>(133, 224, 224)</li>
    </randomColorsOne>
    <statBases>
      <MaxHitPoints>500</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>20</Beauty>
    </statBases>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.1</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.001</minClusterProbability>
    <maxClusterProbability>0.004</maxClusterProbability>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>10</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.2</min>
      <max>0.7</max>
    </visualSizeRange>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualClustering>1.0</visualClustering>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>7.0</DropProbability>
      </li>
      <li>
        <ResourceDefName>CrushedStone</ResourceDefName>
        <DropProbability>5.0</DropProbability>
        <WasteProduct>true</WasteProduct>
      </li>
    </randomlyDropResources>
    <!-- Minimum distance from the nearest settlement the inital spawn needs to be in order to be spawned at the maximum probablity -->
    <otherSettlementMiningRadius>15</otherSettlementMiningRadius>
  </ThingDef>


  <ThingDef Name="MagnetiteCrystal" ParentName="MetalOxideBase" Class="MineralsFramework.ThingDef_StaticMineral">
    <defName>MagnetiteCrystal</defName>
    <label>Magnetite Crystals</label>
    <description>Formations of iron(II,III) oxide, a common iron ore in sedimentary rocks.</description>
    <graphicData>
      <texPath>Things/Mineral/PyriteCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(100,100,100)</color>
      <shaderType>CutoutComplex</shaderType>
      <damageData>
        <enabled>false</enabled>
      </damageData>
    </graphicData>
    <uiIconPath>Things/Mineral/PyriteCrystal/PyriteCrystalA</uiIconPath>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.3</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.002</minClusterProbability>
    <maxClusterProbability>0.006</maxClusterProbability>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>MineableSteel</li>
    </associatedOres>
    <nearAssociatedOreBonus>50</nearAssociatedOreBonus>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>0.5</DropProbability>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>Steel</ResourceDefName>
        <DropProbability>6</DropProbability>
        <CountPerDrop>5</CountPerDrop>
      </li>
    </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
      <li>NoticeMineral_Event</li>
    </tags>
    <!-- Minimum distance from the nearest settlement the inital spawn needs to be in order to be spawned at the maximum probablity -->
    <otherSettlementMiningRadius>5</otherSettlementMiningRadius>
  </ThingDef>

  <ThingDef ParentName="CorundumBase" Class="MineralsFramework.ThingDef_StaticMineral">
    <defName>RubyCrystal</defName>
    <label>Rubies embedded in rock</label>
    <description>Crystals of aluminium oxide embedded in rock. One of the hardest minerals and often cut into gems. Impurities of chromium color this patch is a deep red.</description>
    <graphicData>
      <texPath>Things/Mineral/CorundumCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(202,119,140)</color>
      <damageData>
        <enabled>false</enabled>
      </damageData>
    </graphicData>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.1</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.001</minClusterProbability>
    <maxClusterProbability>0.003</maxClusterProbability>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>6.0</DropProbability>
      </li>
      <li>
        <ResourceDefName>RoughUltrahardGem</ResourceDefName>
        <DropProbability>4.0</DropProbability>
        <MinMiningSkill>5</MinMiningSkill>
      </li>
    </randomlyDropResources>
    <!-- Minimum distance from the nearest settlement the inital spawn needs to be in order to be spawned at the maximum probablity -->
    <otherSettlementMiningRadius>18</otherSettlementMiningRadius>
  </ThingDef>


  <ThingDef ParentName="CorundumBase" Class="MineralsFramework.ThingDef_StaticMineral">
    <defName>SapphireCrystal</defName>
    <label>Sapphires embedded in rock</label>
    <description>Crystals of aluminium oxide embedded in rock. One of the hardest minerals and often cut into gems. Impurities of iron color this patch a deep blue.</description>
    <graphicData>
      <texPath>Things/Mineral/CorundumCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(131,156,199)</color>
      <damageData>
        <enabled>false</enabled>
      </damageData>
    </graphicData>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.1</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.001</minClusterProbability>
    <maxClusterProbability>0.003</maxClusterProbability>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>6.0</DropProbability>
      </li>
      <li>
        <ResourceDefName>RoughUltrahardGem</ResourceDefName>
        <DropProbability>4.0</DropProbability>
        <MinMiningSkill>5</MinMiningSkill>
      </li>
    </randomlyDropResources>
    <!-- Minimum distance from the nearest settlement the inital spawn needs to be in order to be spawned at the maximum probablity -->
    <otherSettlementMiningRadius>15</otherSettlementMiningRadius>
  </ThingDef>


  <ThingDef ParentName="BerylBase" Class="MineralsFramework.ThingDef_StaticMineral">
    <defName>EmeraldCrystal</defName>
    <label>Emeralds embedded in rock</label>
    <description>Crystals of beryl, a type of beryllium aluminium silicate, a rare mineral often used for gemstones. This variety is green due to trace impurities of chromium.</description>
    <graphicData>
      <texPath>Things/Mineral/BerylCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(84,169,137)</color>
      <damageData>
        <enabled>false</enabled>
      </damageData>
    </graphicData>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.1</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.001</minClusterProbability>
    <maxClusterProbability>0.003</maxClusterProbability>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>6.0</DropProbability>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
    </randomlyDropResources>
    <!-- Minimum distance from the nearest settlement the inital spawn needs to be in order to be spawned at the maximum probablity -->
    <otherSettlementMiningRadius>12</otherSettlementMiningRadius>
  </ThingDef>


  <ThingDef Name="DiamondCrystal" ParentName="EmbeddedMineralBase" Class="MineralsFramework.ThingDef_StaticMineral">
    <defName>DiamondCrystal</defName>
    <label>Diamonds embedded in rock</label>
    <description>Crystals of pure carbon. The hardest known substance and a valuable gemstone.</description>
    <graphicData>
      <texPath>Things/Mineral/DiamondCrystal</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <damageData>
        <enabled>false</enabled>
      </damageData>
    </graphicData>
    <uiIconPath>Things/Mineral/DiamondCrystal/DiamondCrystalA</uiIconPath>
    <statBases>
      <MaxHitPoints>1500</MaxHitPoints>
      <Flammability>0</Flammability>
      <Beauty>20</Beauty>
    </statBases>
    <!--How far away it can spawn from an existing location-->
    <!-- Even though it is a static crystal, the map initialization uses "reproduction" to make clusters-->
    <spawnRadius>6</spawnRadius>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.1</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.001</minClusterProbability>
    <maxClusterProbability>0.003</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>2</minClusterSize>
    <maxClusterSize>25</maxClusterSize>
    <!-- The range of starting sizes of individuals in clusters -->
    <initialSizeMin>.2</initialSizeMin>
    <initialSizeMax>.7</initialSizeMax>
    <!-- How much initial sizes of individuals randomly vary -->
    <initialSizeVariation>.1</initialSizeVariation>
    <!-- The terrains this can appear on. The default is rocky terrains-->
    <allowedTerrains>
      <li>Granite_Rough</li>
      <li>MR_BasaltBase_Rough</li>
      <li>ZF_DioriteBase_Rough</li>
      <li>ZF_GabbroBase_Rough</li>
      <li>ZF_DuniteBase_Rough</li>
      <li>ZF_RhyoliteBase_Rough</li>
      <li>ZF_ScoriaBase_Rough</li>
    </allowedTerrains>
    <!-- Roof requirements -->
    <mustBeUnderRoof>false</mustBeUnderRoof>
    <mustBeUnderThickRoof>false</mustBeUnderThickRoof>
    <mustBeUnroofed>false</mustBeUnroofed>
    <!-- The maximum number of images that will be printed per square -->
    <maxMeshCount>7</maxMeshCount>
    <!-- The size range -->
    <visualSizeRange>
      <min>0.1</min>
      <max>0.2</max>
    </visualSizeRange>
    <visualClustering>0.2</visualClustering>
    <!-- between 0 and 1. 0 = uniform distribution, 1 = normal distribution -->
    <visualSpread>1.2</visualSpread>
    <!-- 1 = everything appears within cell and can spawn at edge when visualClustering == 0 -->
    <visualSizeVariation>0.2</visualSizeVariation>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>10.0</DropProbability>
      </li>
      <li>
        <ResourceDefName>RoughUltrahardGem</ResourceDefName>
        <DropProbability>10.0</DropProbability>
        <MinMiningSkill>5</MinMiningSkill>
      </li>
    </randomlyDropResources>
    <!-- Minimum distance from the nearest settlement the inital spawn needs to be in order to be spawned at the maximum probablity -->
    <otherSettlementMiningRadius>20</otherSettlementMiningRadius>
  </ThingDef>


  <ThingDef ParentName="MetalOxideBase" Class="MineralsFramework.ThingDef_StaticMineral">
    <defName>UraniniteDeposit</defName>
    <label>Uranium Deposit</label>
    <description>Formations of uranium oxide, a major uranium ore. Often assocaited with silver.</description>
    <graphicData>
      <texPath>Things/Mineral/UraniniteDeposit</texPath>
      <graphicClass>Graphic_Random</graphicClass>
      <drawSize>(1,1)</drawSize>
      <color>(127,120,102)</color>
      <shaderType>CutoutComplex</shaderType>
      <damageData>
        <enabled>false</enabled>
      </damageData>
    </graphicData>
    <uiIconPath>Things/Mineral/UraniniteDeposit/UraniniteDepositA</uiIconPath>
    <comps>
      <li Class="CompProperties_Glower">
        <glowRadius>1</glowRadius>
        <glowColor>(15,200,0,0)</glowColor>
      </li>
    </comps>
    <!-- The probability that this mineral type will be spawned at all on a given map -->
    <perMapProbability>0.2</perMapProbability>
    <!--For a given map, the minimum/maximum probablility a cluster will spawn for every possible location -->
    <minClusterProbability>0.001</minClusterProbability>
    <maxClusterProbability>0.004</maxClusterProbability>
    <!-- How  many squares each cluster will be -->
    <minClusterSize>1</minClusterSize>
    <maxClusterSize>10</maxClusterSize>
    <!-- Controls how extra clusters are added near assocaited ore-->
    <associatedOres>
      <li>MineableUranium</li>
      <li>MineableSilver</li>
    </associatedOres>
    <nearAssociatedOreBonus>50</nearAssociatedOreBonus>
    <!-- Other resources it might drop -->
    <randomlyDropResources>
      <li>
        <ResourceDefName>RoughGem</ResourceDefName>
        <DropProbability>0.5</DropProbability>
        <MinMiningSkill>3</MinMiningSkill>
      </li>
      <li>
        <ResourceDefName>Uranium</ResourceDefName>
        <DropProbability>5</DropProbability>
        <CountPerDrop>5</CountPerDrop>
      </li>
    </randomlyDropResources>
    <!-- Tags which determine how some options behave  -->
    <tags>
      <li>crystal</li>
      <li>NoticeMineral_Event</li>
    </tags>
    <!-- Minimum distance from the nearest settlement the inital spawn needs to be in order to be spawned at the maximum probablity -->
    <otherSettlementMiningRadius>10</otherSettlementMiningRadius>
  </ThingDef>

</Defs>
